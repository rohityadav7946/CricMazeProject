@page "/search"
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Navigations
@using Syncfusion.Blazor.Inputs

    <SfToolbar>
        <ToolbarItems>
            <ToolbarItem Type="ItemType.Input" Align="ItemAlign.Right">
                <Template>
                    <SfTextBox Placeholder="Search Term" @ref="SearchTextBox"></SfTextBox>
                </Template>
            </ToolbarItem>
            <ToolbarItem Type="ItemType.Button" Align="ItemAlign.Right">
                <Template>
                    <SfButton Content="Search" OnClick="@SearchClick"></SfButton>
                </Template>
            </ToolbarItem>
        </ToolbarItems>
    </SfToolbar>
    <SfGrid @ref="playerGrid" DataSource="@Players">
        <GridSearchSettings Operator="Operator.Equal"></GridSearchSettings>
        <GridColumns>
            <GridColumn Field=@nameof(Player.PlayerId) HeaderText="Player ID"></GridColumn>
            <GridColumn Field=@nameof(Player.FirstName) HeaderText="First Name"></GridColumn>
            <GridColumn Field=@nameof(Player.LastName) HeaderText=" Last Name"></GridColumn>
            <GridColumn Field=@nameof(Player.Country) HeaderText="Country" ></GridColumn>
            <GridColumn Field=@nameof(Player.Role) HeaderText="Role"></GridColumn>
            <GridColumn Field=@nameof(Player.Matches) HeaderText="Matches"></GridColumn>
            <GridColumn Field=@nameof(Player.Runs) HeaderText="Runs"></GridColumn>
            <GridColumn Field=@nameof(Player.Highest) HeaderText="Highest"></GridColumn>
            <GridColumn Field=@nameof(Player.Wickets) HeaderText="Wickets"></GridColumn>
            <GridForeignColumn Field=@nameof(Player.TeamId) HeaderText="Team" ForeignDataSource="@Teams" ForeignKeyValue="TeamName"></GridForeignColumn>
        </GridColumns>
    </SfGrid>

@code{

    public SfGrid<Player> playerGrid { get; set; }

    public SfTextBox SearchTextBox { get; set; }

    public List<Player> Players { get; set; }

    [Inject]
    public IPlayerService PlayerService { get; set; }

    public List<Team> Teams { get; set; }
    [Inject]
    public ITeamService TeamService { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Players = (await PlayerService.GetAllPlayers()).ToList();
        Teams = (await TeamService.GetTeams()).ToList();
    }

    private void SearchClick()
    {
        this.playerGrid.SearchAsync(this.SearchTextBox.Value);
    }
}
